= Mconf-Web =

|| [https://github.com/mconf/mconf-web Source code] || [MconfWeb#How_to_Start How to Start] ||

Mconf-Web is the social network in the Mconf webconferencing system.

It is (currently) a fork of *VCC*, and open source system that can be found [https://github.com/ging/vcc here].

Mconf-web is a web application that connects to a !BigBlueButton server instance and allows the users to create and participate in webconferences. It provides functionalities that are (by design) not implemented in the core of !BigBlueButton, such as:

 * User authentication;
 * Permission control to access webconference rooms;
 * Follows a social network model (inherited from VCC) with spaces (communities) that have events:
   * People from a space can interact using this space's webconferece room;
   * (_not implemented yet_) Events will have a webconference room associated. Users can schedule events and enable features such as automatic recording.
 * Users can also create their own webconferences and share with other members or invite non-members;

During the first phase of Mconf-web, we are strongly focusing on the integration with !BigBlueButton. This means that we want to have the basic libraries needed to integrate a Ruby on Rails application and !BigBlueButton fully functional and with all the features we need. The current Mconf-web is a test application for these libraries and is also an integration between !BigBlueButton and an improved version of VCC. In the future, it's possible that Mconf-web will change it's model and move away from VCC.


== Differences between Mconf-web and VCC ==

The project supporting VCC has ended in the end of 2010, so it's development has been greatly reduced since then. You can see the new directions VCC's team has taken at their [https://github.com/ging github page].

VCC is developed in Ruby on Rails 2.3.4 and uses Isabel to perform webconfereces. The most important differences included by Mconf-web are the use of *Rails 3* and the use of *!BigBlueButton* as a replacement for Isabel.

== Integration with !BigBlueButton ==

The integration with !BigBlueButton is based on two gems (that are also being developed in the Mconf project):

  * *[https://github.com/mconf/bigbluebutton-api-ruby bigbluebutton-api-ruby]*: A library to access the !BigBlueButton API in Ruby applications. Developed on top of a gem called [http://code.google.com/p/bigbluebuttongem/ bigbluebuttongem] to be used in Mconf-Web.

  * *[https://github.com/mconf/bigbluebutton_rails bigbluebutton_rails]*: An integration of BBB and Rails. It uses bigbluebutton-api-ruby to access the BBB API.

== How to Start ==

MConf-web uses Rails 3 (currently 3.0.5) and Ruby 1.9.2.

Setting up the development environment:

  # First, install Ruby. We recommend the use of [http://rvm.beginrescueend.com/ RVM], so we've made a [RVMQuickSteps brief guide] to show you how to install it.
  # Clone mconf-web:
    {{{
git clone git://github.com/mconf/mconf-web.git
    }}}
  # To proceed, you need to install some system packages and gems (libraries) used by Mconf-web. The system packages can be installed using the script called "setup" and the gems are installed using the standard Ruby "bundler":
    {{{
script/setup development
gem install bundler && bundle install
    }}}
  # Set up your system (it creates some configuration files and updates git submodules):
    {{{
rake setup:basic
    }}}
  # Configuration files. The command above created some files that you need to configure to be able to run the application. They are all very simple, so it's pretty easy to edit them. They are already formatted with a standard structure, but some information is sensible and unique for each setup, so *you really need* to edit them. The files are:
    * *<tt>config/database.yml</tt>* configures the database
      * You may need to insert a password if you're using mysql.
    * *<tt>config/mail_conf.yml</tt>* configures the mail delivery
      * Mconf-web uses by default a gmail account to send emails (<tt>see config/initializers/mail_conf.rb</tt>). You just need to insert you name/password in this file.
    * *<tt>config/bigbluebutton_conf.yml</tt>* configures your !BigBlueButton server
      * This !BigBlueButton server will be added in the database as the default server. Currently, all !BigBlueButton rooms created through Mconf-web will use this server.
  # Setup the database. It will drop and recreate your _development_ database, create basic data (<b>you need</b> this data to run the application) and populate the db with test data.
    {{{
rake setup:db
    }}}
  # Setup the _test_ database.
    {{{
RAILS_ENV=test rake setup:db
    }}}

Then you can:

  * Run the server and navigate to <tt>localhost:3000</tt>:
    {{{
rails server
    }}}
  * Run the test set with:
    {{{
bundle exec rake spec
    }}}