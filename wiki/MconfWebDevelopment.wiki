#summary Mconf-Web development

= Mconf-Web Development =

The latest stable version of Mconf-web uses Rails 3 and Ruby 1.9.2-p290.

== Setting up the development environment ==


=== Manual setup ===

  * First, install Ruby. We recommend the use of [http://rvm.beginrescueend.com/ RVM]. See [http://beginrescueend.com/rvm/install/ this page] to now how to install it (use the single-user installation). After RVM is installed, install Ruby and create a gemset for mconf with:
    {{{
rvm install 1.9.2-p290
rvm gemset create mconf
rvm use --default 1.9.2-p290@mconf
    }}}

  * Clone mconf-web:
    {{{
git clone git://github.com/mconf/mconf-web.git
    }}}

  * To proceed, you need to install some system packages used by Mconf-web (you can also see this list of packages [https://github.com/mconf/mconf-web/blob/latest/config/packages.ubuntu in this file] in our repository):
    {{{
sudo apt-get install wget make curl git-core libruby aspell-es aspell-en libxml2-dev \
                          libxslt1-dev libmagickcore-dev libmagickwand-dev imagemagick \
                          libmysqlclient-dev mysql-server zlib1g-dev build-essential \
                          libreadline-dev libsqlite3-dev
    }}}

   * Install gems and git submodules with:
    {{{
git submodule init
git submodule update
bundle install
    }}}

  * Set up your system (it creates some configuration files and updates git submodules):
    {{{
rake setup:basic
    }}}

  * Configuration files. The command above created some files that you need to configure to be able to run the application. They are already formatted with a standard structure, but some information is sensible and unique for each setup, so *you really need* to edit them. The files are:
    * *<tt>config/database.yml</tt>*: configures the database. See [MconfWebSetupConf#Configuring_the_database_(_database.yml_) this page] for more details about this file.
    * *<tt>config/setup_conf.yml</tt>* contains the basic configuration data that will be used during the database setup and when the application is initialized. See [MconfWebSetupConf#Configuring_the_application_(_setup_conf.yml_) this page] for more details about this file.
    * *<tt>config/deploy/conf.yml</tt>* configurations for deployment with Capistrano.

  * Setup the database. It will drop and recreate your _development_ database, create basic data (<b>you need</b> this data to run the application) and populate the db with test data.
    {{{
rake setup:db
    }}}

  * Run the command below to start the server and open your browser and go to <tt>localhost:3000</tt>.
    {{{
rails server
    }}}

== Fake test data ==

You can create fake data in your development database using the following rake task:

    {{{
rake setup:populate
    }}}

It will create users, spaces, posts and everything you need to have a populated web site and test your modifications.

== Testing ==

Proceed to [MconfWebTesting this page].

== Development Tips ==

Proceed to [MconfWebDevelopmentTips this page].

== Configuring the website ==

Mconf-Web stores all its configurations in a database and provides a *management interface* in the website where the admin user can edit most of these configurations. See [MconfWebConfiguring this page] for more details.

Also, the configurations that can be edited in the management interface can also be configured using the file <tt>config/setup_conf.yml</tt>. See [MconfWebSetupConf this page] for more details on how it works.