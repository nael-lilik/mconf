#summary Technical documentation about the Mconf Global Network

<wiki:toc max_depth="3" />

= Mconf Global Webconference Network =

This page contains the technical documentation about the Mconf Global Network.

= Basics =

You can read the basic description of the network at our page at: http://mconf.org/m/about/network

= Architecture =

You can get details about how the network works in [MconfScalability our wiki page that describes the scalable architecture of Mconf].


= How to join the network =

First of all, take some time to read about the Mconf Network at http://mconf.org/m/about/network.

== Requirements ==

 * You must install it in a fresh Ubuntu Server 10.04 LTS installation. It won't work on any other linux distributions or Ubuntu versions;
 * The server must be dedicated to host the Mconf Node (it can be a VPS);
 * The server must fit the [http://code.google.com/p/bigbluebutton/wiki/FAQ#What_are_the_minimum_hardware_requirements_for_the_BigBlueButton BigBlueButton minimum hardware requirements];
 * Be sure that you have opened for external access the ports TCP 80 (HTTP), TCP 9123 (Desktop Sharing), TCP 1935 (RTMP), UDP 5060 (SIP) and UDP 16384-32768 (RTP);
 * Your server must answer ICMP (Ping), which is used to check if your server is UP or DOWN;
 * If you intend to use a domain name (like "mconf.org"), set that up before continuing;
 * Set the server hostname properly (as described on next section);
 * Set up the NTP service properly ([http://articles.slicehost.com/2010/11/8/using-ntp-to-sync-time-on-ubuntu see this link]);
 * Subscribe to the Mconf Network members group ([https://groups.google.com/d/forum/mconf-network https://groups.google.com/d/forum/mconf-network]).

== Setting up the hostname properly ==

Since the hostname + domain will identify the server on the Mconf Chef Server, it needs to be set up properly. *Suppose that your server URL is _mconf1.ufrgs.br_*, your hostname must be set on `/etc/hostname` as follows:

{{{
$ cat /etc/hostname 
mconf1
}}}

And your `/etc/hosts` must be set as follows:

{{{
$ cat /etc/hosts
127.0.0.1       localhost
143.54.31.81     mconf1.ufrgs.br        mconf1

# The following lines are desirable for IPv6 capable hosts
::1     localhost ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6-mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
}}}

Please pay attention at the second line, first comes the IP address of the server, then the hostname followed by the domain name, and then just the hostname. This way, when the server gets registered on Chef Server, it will be identified correctly as `mconf1.ufrgs.br`. *These configurations must be done before install the Chef Client - if you want to modify these configurations later, please contact support AT mconf.org.*

== Deployment ==

Mconf-Live is installed using the [http://www.opscode.com/chef/ Chef framework], and all the recipes used to deploy a Mconf Node are open source and available on !GitHub (https://github.com/mconf/chef-recipes). We do not provide any other way to install Mconf-Live without Chef, and this service is currently only available for the Mconf Network partners.

The first step is to fill the metadata presented below and send it to support AT mconf.org:

{{{
{
  "metadata": {
    "server_alias":"UFRGS 1",
    "server_url":"http://mconf1.ufrgs.br",
    "server_hostname":"mconf1",
    "server_location":"Porto Alegre-RS, Brazil",
    "institution_name":"Universidade Federal do Rio Grande do Sul",
    "institution_website":"http://ufrgs.br",
    "institution_portal":"https://mconf.org",
    "responsible_name":"Felipe Cecagno",
    "responsible_email":"felipe AT mconf.org"
  }
}
}}}

 * `server_alias`: the alias for the server that will be presented on the [http://lb.mconf.org Mconf Load Balancer]
 * `server_url`: the URL for your server, including domain (or IP address, if it doesn't have a name) and port (when different than 80)
 * `server_hostname`: the hostname of the server, that can be checked on `/etc/hostname` - it identifies the server on Chef Server, as explained above
 * `server_location`: the high level location of the server (granularity of "city" is fine)
 * `institution_name`: name of the institution that is maintaining the server
 * `institution_website`: website of the institution
 * `institution_portal`: web portal used to access the webconference rooms - if your institution is using only the web portal mconf.org to access the conference rooms, leave it blank
 * `responsible_name`: the technician responsible for the server
 * `responsible_email`: e-mail contact of the responsible

*It is responsibility of all partners to keep the metadata of their servers updated.*

The second step is to install the Chef Client. For that we will send by e-mail a validation key, that will be used to register your server on the Mconf Chef Server. The validation key must be placed on *`/etc/chef/validation.pem`*.

If the given directory doesn't exist, create it. *Do not continue before receiving the validation key.*

Then copy the script below and paste it in a file named `install-mconf-chef.sh`:

{{{
#!/bin/bash

if [ ! -f /etc/chef/validation.pem ]
then
      echo "No validation key found (/etc/chef/validation.pem), aborting..."
      exit 1
fi

# http://code.google.com/p/bigbluebutton/wiki/InstallationUbuntu#2._Install_Ruby
sudo apt-get update && sudo apt-get -y install zlib1g-dev libssl-dev libreadline5-dev libyaml-dev build-essential bison checkinstall libffi5 gcc checkinstall libreadline5 libyaml-0-2

cd /tmp
wget -N http://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.2-p290.tar.gz
tar xvzf ruby-1.9.2-p290.tar.gz
cd ruby-1.9.2-p290
./configure --prefix=/usr\
            --program-suffix=1.9.2\
            --with-ruby-version=1.9.2\
            --disable-install-doc
make
sudo checkinstall -D -y\
                  --fstrans=no\
                  --nodoc\
                  --pkgname='ruby1.9.2'\
                  --pkgversion='1.9.2-p290'\
                  --provides='ruby'\
                  --requires='libc6,libffi5,libgdbm3,libncurses5,libreadline5,openssl,libyaml-0-2,zlib1g'\
                  --maintainer=brendan.ribera@gmail.com
sudo update-alternatives --install /usr/bin/ruby ruby /usr/bin/ruby1.9.2 500 \
                         --slave /usr/bin/ri ri /usr/bin/ri1.9.2 \
                         --slave /usr/bin/irb irb /usr/bin/irb1.9.2 \
                         --slave /usr/bin/erb erb /usr/bin/erb1.9.2 \
                         --slave /usr/bin/rdoc rdoc /usr/bin/rdoc1.9.2
sudo update-alternatives --install /usr/bin/gem gem /usr/bin/gem1.9.2 500
sudo rm -r /tmp/ruby-1.9.2-p290*

cd ~/
sudo gem install chef --version '= 10.24.0' --no-ri --no-rdoc

# http://www.thelinuxdaily.com/2010/05/echo-or-cat-multiple-lines-or-paragraph-of-text-from-within-a-shell-script/
cat > client.rb << EOF
chef_server_url  "http://chef.mconf.org:4000"
EOF
sudo mv client.rb /etc/chef/

sudo chef-client
}}}

After that, your server will be registered on the Mconf Chef Server. Then we will assign the role "[https://github.com/mconf/chef-recipes/blob/master/roles/mconf-node.json mconf-node]" to your server, and both software and configuration will get installed and updated.

== Troubleshooting ==

The log generated by the Chef Client is placed on *`/var/log/chef/client.log`*.

For troubleshooting, please visit the mailing list (see [http://mconf.org/m/about/contact http://mconf.org/m/about/contact]) or send a message to support AT mconf.org.