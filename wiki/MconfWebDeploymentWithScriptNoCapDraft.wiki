_This page is a continuation of [MconfWebDeployment this page]._

Note: From version 0.3, the script has changed quite a bit. The documentation for the old version [MconfWebDeploymentWithScript0.2 can be found here].


= Mconf-Web Deployment With mconf-web-conf =

<wiki:toc max_depth="3" />

== Overview ==

This guide is destined to those who search an easy way to install Mconf-Web or those that have no experience with Ruby/Rails applications. If you're searching for a more flexible installation (possibly with using more advanced tools), see the [MconfWebDeploymentManual manual installation guide].

== Installing Mconf-Web ==

At first, you have to download and install the script `mconf-web-conf`. For more details about it see [MconfWebMconfWebConf this page].

You can download it and use from your local folder with (note: install curl if you don't have it yet):

{{{
curl https://raw.github.com/mconf/mconf-web/master/script/mconf-web-conf -o mconf-web-conf
chmod a+x mconf-web-conf
}}}


Or install it in your system:

{{{
sudo curl https://raw.github.com/mconf/mconf-web/master/script/mconf-web-conf -o /usr/local/bin/mconf-web-conf
sudo chmod a+x /usr/local/bin/mconf-web-conf
}}}

The steps you will need to install the application are:

  # Install dependencies (system packages);
  # Install ruby;
  # Install the web server and download the application;
  # Edit some configuration files;
  # Finaly, deploy.

*Note:* Don't run the commands as sudo. When superuser permissions are required the script will ask you for a password.

=== 1. System Packages ===

{{{
mconf-web-conf --install-packages
}}}

You can see the list of packages that will be installed [https://github.com/mconf/mconf-web/blob/master/config/packages.ubuntu in this file].

=== 2. Ruby (using RVM) ===

{{{
mconf-web-conf --install-ruby
}}}

Ruby will be installed using [http://beginrescueend.com/ RVM], as multi-user. This means that ruby will be available to all users.

<font color=red>*Important note:*</font> After installing ruby, you should close your terminal and open it again, so that RVM will be fully operational.

=== 3. Install a web server, more dependencies and download the aplication ===

This command will install the web server, other dependencies (gems) and checkout the source code for Mconf-Web.

{{{
mconf-web-conf --deploy-setup
}}}

If you're installing Mconf-Web in a standalone machine, the script will ask you if you want to use Apache or Nginx. You can use the one you prefer.

If you're installing Mconf-Web in the same machine where you already have !BigBlueButton, you should use Apache for Mconf-Web. If you decide to use Nginx, you'll have to configure it manually (see more about this issue [MconfWebDeployInBBBMachine in this page]).

Notice also that the script will always download the latest version available. All versions are marked as tags in the repository. To see all available versions, go to [https://github.com/mconf/mconf-web our repository] and see the "Switch tags" button or check the [https://github.com/mconf/mconf-web/archives/master download page].

If you want an specific version, you can change the variable `DEPLOY_VERSION` in the script, such as:

{{{
DEPLOY_VERSION=v0.3      # this will install version 0.3
DEPLOY_VERSION=stable    # you can also specify any branch existent in the repository
}}}

=== 4. Edit the configuration files (manual configuration) ===

There are two files that need to be configured. At first, copy the example files:

{{{
cp ~/mconf-web/config/setup_conf.yml.example ~/mconf-web/config/setup_conf.yml
cp ~/mconf-web/config/database.yml.example ~/mconf-web/config/database.yml
}}}

Then edit the files `setup_conf.yml` and `database.yml`. *To configure these files, see [MconfWebSetupConf this page]*.

`setup_conf.yml` has general configurations for the web application and `database.yml` configures the database. By default, MySQL will be used. If you haven't set up a password for MySQL yet, you can do it with:

{{{
mysqladmin -u root password "NEW-PASSWORD" # Use the quotes, they are not part of the password
}}}

Or, in case you want to change the password:

{{{
mysqladmin -u root -p password "NEW-PASSWORD"
}}}

=== 5. Deploy for the first time ===

{{{
mconf-web-conf --deploy-configure
}}}

This command will use the configurations from `setup_conf.yml` and `database.yml` to create the database and start the application for the first time.

<font color=red>*Important note:*</font> Be aware that this command will erase your database, so this should not be used if you already have application data in your database.

When it finishes, open your browser and navigate to the IP of the machine where you installed the application to access it. If might take some seconds the first time while the application environment is loaded.

== Maintenance tasks ==

The script also provides commands to update your application and restart it. They are:

{{{
mconf-web-conf --update
mconf-web-conf --restart
}}}

The update task will download the latest version available, just like the task `--deploy-setup` does. Notice that the application is simply a git repository with the application's source code. So if you know how to use git, you can just update your repository whenever you want to (or even point it to another branches, if needed).

Also, in this script the deployment process doesn't use Capistrano, because Capistrano requires a development environment. Capistrano is very useful to update your application, specially if you have several application servers (one for production and another one for testing, for instance). If you want to know more about it, check the [MconfWebDeploymentManual manual installation guide].