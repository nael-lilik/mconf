_This page is a continuation of [MconfWebDeployment this page]._

= Mconf-Web Deployment With mconf-web-conf =

== Overview ==

This guide is destined to those who search for an easy way to install Mconf-Web or those who doesn't have experience with Ruby/Rails applications.

If you're searching for a more flexible installation, see the [MconfWebDeploymentManual manual installation guide].

== Starting ==

For more details about the script see [MconfWebMconfWebConf this page]. You can download and install it with:

{{{
sudo curl https://raw.github.com/mconf/mconf-web/master/script/mconf-web-conf -o /usr/local/bin/mconf-web-conf
sudo chmod a+x /usr/local/bin/mconf-web-conf
}}}

The steps you will need to install the application are:

  * Install dependencies (system packages);
  * Install ruby;
  * Install the web server and basic gems;
  * Edit some configuration files;
  * Finaly, deploy.

== (1) Configuring the server ==

=== System Packages ===

{{{
mconf-web-conf --install-packages production
}}}

=== Ruby (using RVM) ===

{{{
mconf-web-conf --install-ruby
}}}

Ruby will be installed using [http://beginrescueend.com/ RVM], as multi-user. This means that ruby will be available to all users.

=== Web Server and basic gems ===

{{{
mconf-web-conf --setup-deploy
}}}

If you're installing Mconf-Web in a standalone machine, the script will ask you if you want to use Apache or Nginx. You can use the one you prefer.

If you're installing Mconf-Web in the same machine where you already have !BigBlueButton, you should use Apache for Mconf-Web. If you decide to use Nginx, you'll have to configure it manually (see more about this issue [MconfWebDeployInBBBMachine in this page]).


== (2) Deploy ==

To deploy the application you need a development environment. If you already have one in another machine, take a look at the [MconfWebDeploymentManual#(2)_Deploy Deploy section in the manual deployment page].

If you don't have a development environment, you can either [MconfWebDevelopment create one manually] or [MconfWebMconfWebConf using the script mconf-web-conf] (see the usage scenarios). You can setup the development environment in the same machine as the production environment if you want to.

The easiest way to setup a development environment in the same machine and then deploy the application, is to run the following commands:

{{{
mconf-web-conf --install-packages development   # install system packages
mconf-web-conf --checkout                       # get the code
mconf-web-conf --setup-dev                      # setup config files
mconf-web-conf --deploy-first-time              # deploy
}}}