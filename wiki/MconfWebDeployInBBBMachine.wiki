#summary Deploy Mconf-Web in the same machine that has BigBlueButton installed

<wiki:toc max_depth="3" />

= Mconf-Web Deployment with !BigBlueButton = 

You can setup a Mconf-Web server in the same machine that already has !BigBlueButton. This page contains some considerations about it. You have to be careful choosing the web server you will use for Mconf-Web. You can use either Apache (recommended) or Nginx.

Also, in this page we provide some tips on how to configure Mconf-Web to use the local !BigBlueButton installation.

== Web Server ==

=== Use Mconf-Web with Apache and !BigBlueButton with Nginx (recommended) ===

This is the default solution, and requires just a few configurations on both web servers. 

If you deploy Mconf-Web [MconfWebDeploymentWithScript using our script] it will already detect that !BigBlueButton is installed and, if you choose to install Apache, it will configure both Apache and Nginx to work with both applications.

If you can't use the script for some reason, here are some guidelines of what you need to configure in Apache and Nginx.

==== Manual configuration ====

If you know some bash script you can take a look at the following section in [https://github.com/mconf/mconf-web/blob/master/script/mconf-web-conf our script] and you will find out how to configure the web servers:

{{{
if [ $SETUP_PROD ]; then
...
    is_bigbluebutton_installed
    if [ $REPLY ]; then
        # here is where we ask the user what to do since BigBlueButton is installed
        # and if he chooses to install Apache we will do it automatically.
...
}}}

The first steps are:

{{{
sudo rm /etc/nginx/sites-enabled/default     # Disable the default config in nginx that uses the port 80
sudo bbb-conf --setip $IP:$PORT              # Tell BBB to respond in another port
}}}

_Replace $IP with your machine's IP and $PORT with the port you want for !BigBlueButton_

!BigBlueButton should respond in a port different than 80, since Mconf-Web will use the port 80. By default our script changes its port to 8888, but you can use another one if you want to. Be aware that remote users accessing !BigBlueButton from behind a firewall can no longer tunnel through port 80 to !BigBlueButton. See more about it in the [http://code.google.com/p/bigbluebutton/wiki/FAQ#I_have_an_existing_server_with_web_application_already_running_o BigBlueButton FAQ].

Next, we install Apache using [http://www.modrails.com/ Passenger]. At our [MconfWebDeploymentManual#Apache manual deployment page] you can find a guide on how to install Passenger and Apache. Follow the section "Apache" in that page and then come back to this page.

With this you have the production server up and ready to receive a deployed Mconf-Web. To deploy, you can again use our script or do it manually. Proceed to [MconfWebDeployment this page] to learn how to do that.


=== Use both applications with Nginx ===

Mconf-Web uses the gem [http://www.modrails.com/ Passenger], that's used to serve Rails applications. To run Passenger with Nginx, you need a compiled version of Nginx that has the Passenger module enabled. Since !BigBlueButton uses a packaged version of Nginx, we cannot serve Mconf-Web with Passenger using this same version.

There are two options we know of to solve this:

  * Use [http://code.macournoyer.com/thin/ Thin] instead of Passenger:
    * Thin doesn't need to compile Nginx to use it, so you can use Thin with the packaged version of Nginx.
    * [MconfWebWithNginxAndThin This page] has some tips on how to use Thin and Nginx.

  * Install the Passenger-enabled Nginx on top of the packaged Nginx. And then configure Nginx to run both Mconf-Web and !BigBlueButton:
    * Take a look at [MconfWebDeploymentManual#Nginx this page] to know how to install Nginx using Passenger.
    * The packaged version of Nginx is installed at `/etc/nginx/`, so install the new version in this same place.


== Configuring Mconf-Web to use the local !BigBlueButton ==

_to be written..._