#summary Explanation of how the video support was added to the MconfMobile application

= Introduction =

This chapter will present how the video support was added to the MconfMobile application.

= Details =

The files directly related to the video integration and created for the mconfmobile are:

1) From the org.mconf.bbb.android.video package:
{{{
/bbb-android/src/org/mconf/bbb/android/video/CaptureConstants.java
/bbb-android/src/org/mconf/bbb/android/video/CaptureDialog.java
/bbb-android/src/org/mconf/bbb/android/video/LoadNativeCaptureLibs.java
/bbb-android/src/org/mconf/bbb/android/video/VideoCapture.java
/bbb-android/src/org/mconf/bbb/android/video/VideoCaptureLayout.java
/bbb-android/src/org/mconf/bbb/android/video/VideoCentering.java
/bbb-android/src/org/mconf/bbb/android/video/VideoDialog.java
/bbb-android/src/org/mconf/bbb/android/video/VideoFullScreen.java
/bbb-android/src/org/mconf/bbb/android/video/VideoPublish.java
/bbb-android/src/org/mconf/bbb/android/video/VideoRenderer.java
/bbb-android/src/org/mconf/bbb/android/video/VideoSurface.java
}}}

2) From the org.mconf.bbb.video package:
{{{
/bbb-java/src/org/mconf/bbb/video/IVideoListener.java
/bbb-java/src/org/mconf/bbb/video/IVideoPublishListener.java
/bbb-java/src/org/mconf/bbb/video/VideoPublishRtmpConnection.java
/bbb-java/src/org/mconf/bbb/video/VideoRtmpConnection.java
}}}

3) From the bbb-android/jni/mconfnative folder:
{{{
/bbb-android/jni/mconfnative/DrawerManager.cpp
/bbb-android/jni/mconfnative/DrawerManager.h
/bbb-android/jni/mconfnative/EncoderManager.cpp
/bbb-android/jni/mconfnative/EncoderManager.h
/bbb-android/jni/mconfnative/VideoDrawer.cpp
/bbb-android/jni/mconfnative/VideoDrawer.h
/bbb-android/jni/mconfnative/VideoEncoder.cpp
/bbb-android/jni/mconfnative/VideoEncoder.h
}}}

4) Layout elements:
{{{
/bbb-android/res/layout/video_capture_fullscreen.xml
/bbb-android/res/layout/video_capture.xml
/bbb-android/res/layout/video_window_fullscreen.xml
/bbb-android/res/layout/video_window.xml
}}}

For purpose of better understanding, let's divide the implementation in two parts: one responsible for capturing, encoding and publishing the video ([MconfMobileVideoPublish explained here]) and one responsible for receiving, decoding and rendering the video ([MconfMobileVideoReceive explained here]). Both parts basically follow the same strategy: they use the rtmp protocol to publish/receive video (thanks to the flazr lib) and encode/decode video with the ffmpeg lib compiled to Android in C.