#summary Configuring the application using setup_conf.yml

<wiki:toc max_depth="3" />

= Configuring the application (setup_conf.yml) =

This file contains configurations that are used to populate the database the first time you setup your application. It is *optional*: if you don't configure it default values will be used and you will be able to edit them using [MconfWebConfiguring Mconf-Web's management page].

Remember to keep the file indented and formatted as it is. Its format and structure have semantic meaning, so you shouldn't change them.

== Structure ==

The file has up to four sections:
  * default
  * development
  * production
  * test

The "default" section is always present and its values are used as the default values. The other sections are used to define specific configurations for each Rails environment (development, production, test). In these other sections you should specify only the parameters you want to override over the default configurations.

Inside the default section, you will find the parameters listed below.

== Sections ==

=== Admin user ===

These parameters define the administrator user. Use a valid email and you can use a simple password here, since you are able to change it later on through the website.

Currently this will be the only admin user in your application.

{{{
admin_login: "mconf"     	       	       	       # admin's login
admin_fullname: "Mconf Admin"    	       	       # admin's full name
admin_email: "my-email@server.com"       	       # admin's email
admin_password: "admin"  	       	       	       # admin's password
}}}



=== !BigBlueButton server ===

Defines the first and default !BigBlueButton server. This is used during the setup of your DB, but you are able to modify this server later on using the website.

Currently, all !BigBlueButton rooms created through Mconf-web will use this server.

  * The <tt>url</tt> should use the format "<tt>http://{server}/bigbluebutton/api</tt>". Change only the <tt>{server}</tt> part.

{{{
bbb_server_name: 'Default Server'                     # server name
bbb_server_url: 'http://my-server/bigbluebutton/api'  # server url in the format http://<server>/bigbluebutton/api
bbb_server_salt: 'my-secret-salt'                     # server salt
bbb_server_version: '0.7'                             # bbb version
}}}



=== Website ===

The information is used to create the a Site model, that defines some attributes of your website. The basic configurations are:

{{{
site_name: "Mconf Dev"  	       	       	# Website name
site_description: "Mconf Development Website"   # Website description
site_locale: "en"                               # This will be the default locale for the application
site_domain: "localhost"                        # Your server address
site_signature: "Mconf"                         # To sign emails
site_ssl: "false"                               # Change to "true" to enable SSL
site_analytics_code: ""                         # Google Analytics tracking code. Leave it empty to disable.
                                                # Use the format: "UA-12345678-9".
site_feedback_url: ""                           # URL to be opened when a user logs out of a conference. Leave
                                                # it blank to use the default page
}}}

Currently Mconf-Web uses a Gmail account to send emails, so you can use this section to enter your username and password. You need to set up this account. If you don't, you won't be able to use some features in the website (the user registration for example, needs to send a confirmation email to the user).

{{{
site_email: "my-username@gmail.com"  	         # gmail username
site_email_password: "my-password"    	         # gmail password
}}}


Another part in this section is used to notify (by email) when an exception occurs in the website. This feature *will only work in the production environment*^1^, so it is disabled by default. You will usually configure it in the default section and then enable it in the production section.

{{{
site_exception_notifications: "false"                         # Change to "true" to enable
site_exception_notifications_prefix: "[Mconf-Web Error]"      # Prefix added in the email subject

# Emails that should receive the notification. Use a space, comma of semi-colon to separate multiple emails.
# Example: "my-email@server.com my-email2@server.com email3@server2.com"
site_exception_notifications_recipients: ""
}}}

And to enable it in production:

{{{
production:
  site_exception_notifications: "true"
}}}

_^1^Because the gem exception_notification that does it is only installed for production._



=== Shibboleth === 

Enable or disable the login via Shibboleth and configure it. See more about it [MconfWebDeployShibboleth in this page].

{{{
site_shibboleth: "false"                                       # Change to "true" to enable
site_shibboleth_email_field: "Shib-inetOrgPerson-mail"         # Field used to obtain the user's email
site_shibboleth_name_field: "Shib-inetOrgPerson-sn"            # Field used to obtain the user's name
}}}




= Configuring the database (database.yml) =

The database is configured in the file `config/database.yml`. This is a standard configuration file used by Rails applications, so you can find plenty of resources about it on the Internet (for example, [http://guides.rubyonrails.org/getting_started.html#configuring-a-database this page]).

You can also take a look at the examples in our repository:


  * [https://github.com/mconf/mconf-web/blob/master/config/database.yml.example Default example]: Uses SQLite3 for development and testing and MySQL for production;
  * [https://github.com/mconf/mconf-web/blob/master/config/database.yml.mysql.example MySQL example]: Example on how to use MySQL;
  * [https://github.com/mconf/mconf-web/blob/master/config/database.yml.example Default example]: Example on how to use SQLite3.