= Mconf-Mobile =

|| [https://github.com/mconf/mconf-mobile Source code] || [MconfMobile#If_you_want_to_run_our_app How to Start] || 

Mconf-Mobile is an Android implementation of the [http://www.bigbluebutton.org BigBlueButton] client. If you would like more information about the project, please visit http://www.inf.ufrgs.br/prav/gtmconf (Portuguese and English).

*Video demo 1:* http://www.youtube.com/watch?v=v4Du20LsWGs

= About the subprojects =
== Flazr - a Java implementation of multimedia streaming protocols ==

[http://flazr.com/ Flazr] is a very good implementation of the RTMP protocol with minimal dependencies. It was developed by Peter Thomas and it's licensed under LGPL.

We've had to "clone" the subversion repository of Flazr because we needed to adapt the library to support Remote Shared Objects. We've used part of the [http://red5.org/ Red5] source code - Red5 is an Open Source Flash Server written in Java. Red5 is also licensed under LGPL.

== BBB-Java ==

This is our Java implementation that uses Flazr to communicate with BigBlueButton Server. It is a client-side API and could be used as an interface between any Java application and BBB. The code is licensed under GNU Lesser General Public License (LGPL).

== BBB-Android ==

BBB-Android is our Android implementation of the BigBlueButton client. The code is licensed under GNU Lesser General Public License (LGPL).

*Update:* since March 2011 we changed the license of BBB-Android to GNU General Public Licence (GPL) because we started to use [http://sipdroid.org/ Sipdroid] for audio interaction. Sipdroid is a free SIP/VoIP client for Android and it's licensed under GNU General Public License (GPL).

= If you want to run our app =

 # Install Android SDK ([http://developer.android.com/sdk/index.html link])
 # Install Eclipse ([http://www.eclipse.org/downloads/ link])
 # Configure the environment (Eclipse + Android SDK integration) ([http://developer.android.com/sdk/eclipse-adt.html link])
 # Install Apache Ant ([http://ant.apache.org/ link])
 # Install Android NDK by CrystaX.Net ([http://www.crystax.net/android/ndk-r4.php link])
 # Clone the repository
 # Run *`ant dist`* inside *`flazr/`*
 # Run *`./<NDK-DIR>/ndk-build`* inside *`bbb-android`*
 # Import all the projects in your workspace on Eclipse
 # Just wait while Eclipse build the code
 # Run *`bbb-android`* as an Android application

There are two ways of running the application:

 # If you want to run the application with your integrated environment (like Moodle), you need to provide custom urls for the BigBlueButton calls, replacing the protocol *`http://`* with *`bigbluebutton://`*
 # If you want to run the application standalone, the server you are going to connect must provide the demo *`mobile.jsp`*. To provide standalone access for mobile devices in your server, copy the file *`bbb-android/mobile.jsp`* to *`/var/lib/tomcat6/webapps/bigbluebutton/demo/`*.

We provide mobile access in our development server at http://mconfdev.inf.ufrgs.br.

= Roadmap =
 * Chat module
 * Listeners module
 * Video module

= Pics =

 https://lh5.googleusercontent.com/_X8EH0UU7sPQ/TVGHBclu72I/AAAAAAAAABU/9GqXD1dftmA/s512/device04.png

 https://lh6.googleusercontent.com/_X8EH0UU7sPQ/TVGHHMQoF4I/AAAAAAAAABs/Sv0ZKa3j2BM/s512/device08.png

 https://lh6.googleusercontent.com/_X8EH0UU7sPQ/TVGJdY7fV8I/AAAAAAAAACk/MZtn_X1HtWA/s512/device15.png

More pics [https://picasaweb.google.com/108245856281359125408/BigBlueButtonAndroidApp01# here].