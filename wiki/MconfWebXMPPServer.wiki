= XMMP server for Mconf-web =

<wiki:toc max_depth="2" />

We use the XMMP server [http://www.ejabberd.im/ ejabberd].

= Installation =

Install `ejabberd` and some other packages needed. Python and requests are used in the external authentication script.

{{{
sudo apt-get install ejabberd python-mysqldb python-pip
sudo pip install requests
}}}

Install the module `mod_admin_extra` (additional ejabberd commands). Needed to use VCards.

{{{
sudo wget https://raw.github.com/mconf/mconf-web/master/config/xmpp/mod_admin_extra.beam -O /usr/lib/ejabberd/ebin/mod_admin_extra.beam
}}}

To start/stop it use:

{{{
sudo /etc/init.d/ejabberd start
sudo /etc/init.d/ejabberd stop
}}}

=== If using a firewall ===

The ports 5280 (web administration) and 5222 (client communication) should be open.

In `iptables`, add the following to `/etc/default/firewall`:

{{{
iptables -A INPUT -p tcp --dport 5280 -j ACCEPT
iptables -A INPUT -p tcp --dport 5222 -j ACCEPT
}}}



== Configurations ==
 

Edit `/etc/ejabberd/ejabberd.cfg` (replace `$DOMAIN$` by your domain, e.g. mconf.org):

{{{
%% Admin user
{acl, admin, {user, "admin", "$DOMAIN$"}}.
{acl, adminextraresource, {resource, "modadminextraf8x,31ad"}}.
{access, vcard_set, [
    {allow, adminextraresource},
    {deny, all}]
}.

%% Hostname
{hosts, ["$DOMAIN$"]}.

...

%%
%% Modules enabled in all ejabberd virtual hosts.
%%
{modules,
 [
  {mod_http_bind, []},       # Add this line
  {mod_adhoc,    []}, 

  ...

  # The lines below already exist, replace them.
  {mod_admin_extra, [ {module_resource, "modadminextraf8x,31ad"} ]},
  {mod_vcard,       [ {access_set, vcard_set} ]},
]}.

...

%% auth_method: Method used to authenticate the users.
%% The default method is the internal.
%% If you want to use a different method,
%% comment this line and enable the correct ones.
%%
%% {auth_method, internal}. # Comment

%%
%% Authentication using external script
%% Make sure the script is executable by ejabberd.
%%
# Uncomment and chage to:
{auth_method, external}.
{extauth_program, "python /var/lib/ejabberd/JabberAuth.py"}. 

}}}


== External authentication ==

We'll add a script to `ejabberd` to authenticate the users using Mconf-Web's database.

Create a new user in the database for `ejabberd`. This user should have access to Mconf-Web's database.
Access MySQL monitor (`mysql -u root -p`) and:

{{{
CREATE USER 'mconf_xmpp'@'localhost' IDENTIFIED BY 'password';
GRANT ALL PRIVILEGES ON mconf_production.users TO "mconf_xmpp"@"localhost" IDENTIFIED BY "password";
FLUSH PRIVILEGES;
}}}
<font color=#a00000>TODO: We are currently using the same db user that mconf-web uses. The commands above should also be tested.</font>

Then get the script:

{{{
sudo wget https://raw.github.com/mconf/mconf-web/master/config/xmpp/JabberAuth.py -O /var/lib/ejabberd/JabberAuth.py
sudo chown ejabberd:ejabberd /var/lib/ejabberd/JabberAuth.py
}}}


And configure it:

{{{
##########################################################
#DB Settings
#Just put your settings here.
##########################################################     
db_name="mconf_production"
db_user="mconf"
db_pass="my-password"
db_host="my-server.com"
db_table="users"
db_username_field="login"
db_password_field="crypted_password"
db_salt_field="salt"
domain_suffix="@my-server.com"
auth_url="http://my-server.com/xmpp/me"
}}}

== Configurations for Chat History ==
 

Stop ejabberd:

{{{
sudo /etc/init.d/ejabberd stop
}}}

Install the modules `mod_archive_odbc', 'mysql', 'mysql_auth', 'mysql_conn' and 'mysql_recv'.

{{{
sudo wget https://raw.github.com/mconf/mconf-web/master/config/xmpp/mod_archive_odbc.beam -O /usr/lib/ejabberd/ebin/mod_archive_odbc.beam

sudo wget https://raw.github.com/mconf/mconf-web/master/config/xmpp/mysql.beam -O /usr/lib/ejabberd/ebin/mysql.beam

sudo wget https://raw.github.com/mconf/mconf-web/master/config/xmpp/mysql_auth.beam -O /usr/lib/ejabberd/ebin/mysql_auth.beam

sudo wget https://raw.github.com/mconf/mconf-web/master/config/xmpp/mysql_conn.beam -O /usr/lib/ejabberd/ebin/mysql_conn.beam

sudo wget https://raw.github.com/mconf/mconf-web/master/config/xmpp/mysql_recv.beam -O /usr/lib/ejabberd/ebin/mysql_recv.beam
}}}

Then get the script and execute it (replace $USER$ by your MYSQL user). 

{{{
sudo wget https://raw.github.com/mconf/mconf-web/master/config/xmpp/mod_archive_odbc_mysql.sql -O /tmp/mod_archive_odbc_mysql.sql

mysql -u $USER$ -p < /tmp/mod_archive_odbc_mysql.sql
}}}

Now create a new user in MYSQL to access the ejabberd database:

{{{
CREATE USER 'ejabberd_log'@'localhost' IDENTIFIED BY 'password';
GRANT ALL PRIVILEGES ON ejabberd.* TO "ejabberd_log"@"localhost" IDENTIFIED BY "password";
FLUSH PRIVILEGES;
}}}

Edit /etc/ejabberd/ejabberd.cfg:

{{{
{mod_vcard,       [ {access_set, vcard_set} ]},
{mod_version,  []},     # Put a comma on the end of this line
{mod_archive_odbc, [{database_type, "mysql"},
                    {default_auto_save, true },
                    {enforce_default_auto_save, false },
                    {default_expire, infinity },
                    {enforce_min_expire, 0 },
                    {enforce_max_expire, infinity },
                    {replication_expire, 31536000 },
                    {session_duration, 1800 },
                    {wipeout_interval, 86400}]}
}}}

Start ejabberd:

{{{
sudo /etc/init.d/ejabberd start
}}}