<font color="red">_work in progress..._</font>

= Deployment =

Mconf-web is a Rails application, so the deployment process is very similar to the deployment of any other Rails application.

The server setup we have right now, and thus the recommended setup, uses the following:

  # [http://www.ubuntu.com/ Ubuntu] 10.04 operating system
  # Ruby is installed with [https://rvm.beginrescueend.com/ RVM]
  # [http://www.modrails.com/ Phusion Passenger]
  # [http://nginx.net/ Nginx] is the web server
  # Mysql2 database
  # [https://github.com/capistrano/capistrano Capistrano] helps you run commands on the server from your development environment

The following guide will instruct you on how to setup exactly this environment.

<font color="red">*Important:*</font> The following guide assumes that you have already a development environment configured. After you set up a basic server, most of the deployment will be done remotely from the development environment (using Capistrano). So take a look at [MconfWeb our initial page] to set up your development environment.

Mconf-web should work in any operating system that has Ruby available (and most of them do have Ruby). Changing the items 1 and 2 might only require changes in the applications (packages) you'll need to install. But changes in the items 3 to 5 will certainly require modifications in the configuration files and maybe even some code changes.

== 1. System setup ==

=== Ubuntu ===

First, setup a standard [http://www.ubuntu.com/ Ubuntu] installation and create a user `mconf` with a password:

{{{
sudo useradd mconf
sudo passwd mconf
}}}

To proceed with the setup of Mconf-web you will need to install: a *ssh server*, *git*, *curl*, and *ruby*.

==== Tools ====

In Ubuntu, you can install most of them with:

{{{
sudo apt-get install openssh-server git curl
}}}

==== Ruby and RVM ====

Mconf-web uses Ruby *1.9.2*. To install Ruby, we suggest the use of RVM. You can do it following our [RVMQuickSteps quick steps] or following [https://rvm.beginrescueend.com/rvm/install/ RVM's install page].

If you decided to use RVM, don't forget to actually install Ruby (and not only RVM) and create a gemset for Mconf-web:

{{{
rvm install 1.9.2
rvm gemset create mconf
rvm use --default 1.9.2@mconf
}}}



...


=== Capistrano ===

Add:

  * Install system packages (script/setup production)
  * Install passenger + nginx
  * clone repo
  * Run rake setup:full RAILS_ENV=production
    * cap setup:basic
    * cap setup:db
    * how to customize deploy.rb

Then standard capistrano: cap deploy:setup, cap deploy



_to be continued..._