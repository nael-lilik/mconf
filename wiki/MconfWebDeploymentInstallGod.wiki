#summary How to install God in a Mconf-Web production server

_This page is part of the Mconf-Web deployment described in [MconfWebDeploymentManual this page]._

== Installing God for Mconf-Web ==

[http://god.rubyforge.org/ God] is a process monitoring framework that Mconf-Web uses to monitor other processes. It is installed as a system-wide application and configured as such. God should be always running, just like your web server will always be running.

God is already installed with the other gems when you run `bundle install`, and you should already have done it by now. If you're using Capistrano, tough, you will have to install it.

Install God and, if you're using RVM, create a wrapper for it, so that it runs with the correct environment setup:

{{{
gem install god -v 0.11.0                # this version is also defined in the Gemfile
rvm wrapper 1.9.2-p290@mconf bootup god
}}}

Next, we'll create a configuration file for god at `/etc/god/config`. This file will simply load any other configuration file in the folder `/etc/god/conf.d/`, that will also be created.

{{{
sudo mkdir -p /etc/god/conf.d/
sudo curl https://raw.github.com/mconf/mconf-web/latest/config/god/config -o /etc/god/config
}}}

God is currently used to monitor the process `delayed_job` (used to deliver emails, mostly). So you need to install God's configuration file for delayed_job:

{{{
sudo curl https://raw.github.com/mconf/mconf-web/latest/config/god/delayed_job.god -o /etc/god/conf.d/delayed_job.god
}}}

This file has a line that points to Mconf-Web's path, so it should be edited to match the path where you will place Mconf-Web. You can use the following command to edit it (replace `%PATH%` with the actual path):

{{{
sudo sed -i "s:^RAILS_ROOT =.*:RAILS_ROOT = \"%PATH%\":g" /etc/god/conf.d/delayed_job.god

# example:
sudo sed -i "s:^RAILS_ROOT =.*:RAILS_ROOT = \"/home/mconf/mconf-web/current\":g" /etc/god/conf.d/delayed_job.god
}}}

To start and stop God, we'll install an init script in `/etc/init.d/`:

{{{
sudo curl https://raw.github.com/mconf/mconf-web/latest/config/god/init_script -o /etc/init.d/god
sudo chmod a+x /etc/init.d/god
sudo update-rc.d god defaults
}}}

This script is already configured to load the configuration file `/etc/god/config` and save the log at `/var/log/god.log`. You can change the log directory to your application folder with (replace `%PATH%` with the actual path):

{{{
sudo sed -i "s:^GOD_LOG=.*:GOD_LOG=%PATH%/god.log:g" /etc/init.d/god

# example:
sudo sed -i "s:^GOD_LOG=.*:GOD_LOG=/home/mconf/mconf-web/current/log/god.log:g" /etc/init.d/god
}}}

Then you can start/stop god with:

{{{
sudo /etc/init.d/god {start|stop|restart|status}
}}}

Start it, check if it's running. If not, check the messages in the log file:

{{{
sudo /etc/init.d/god start
ps ax | grep god              
}}}

The "ps" command above should show a process similar to:

{{{
/usr/local/rvm/rubies/ruby-1.9.2-p290/bin/ruby /usr/local/rvm/gems/ruby-1.9.2-p290@mconf/bin/god -c /etc/god/config -l /var/log/god.log --no-syslog --log-level warn
}}}