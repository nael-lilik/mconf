#summary How to install God in a Mconf-Web production server

_This page is part of the Mconf-Web deployment guide described in [MconfWebDeploymentManual this page]._

= Installing God for Mconf-Web =

<wiki:toc max_depth="3" />

[http://god.rubyforge.org/ God] is a process monitoring framework that Mconf-Web uses to monitor other processes. It is installed as a system-wide application and configured as such. God should be always running, just like your web server will always be running.

Install God and create an RVM wrapper for it, so that it runs with the correct environment setup:

{{{
cd ~/mconf-web/current
gem install god -v 0.12.1                # this version is also defined in the Gemfile
rvm wrapper 1.9.2-p290@mconf bootup god
}}}

Next, we'll create a configuration file for god at `/etc/god/config`. This file will simply load any other configuration file in the folder `/etc/god/conf.d/`, that will also be created.

{{{
sudo mkdir -p /etc/god/conf.d/
sudo curl https://raw.github.com/mconf/mconf-web/latest/config/god/config -o /etc/god/config
}}}

God is currently used to monitor the process `delayed_job` (used to deliver emails, mostly). So you need to install God's configuration file for delayed_job:

{{{
sudo curl https://raw.github.com/mconf/mconf-web/latest/config/god/delayed_job.god -o /etc/god/conf.d/delayed_job.god
}}}

This file has a line that points to Mconf-Web's path, so it should be edited to match the path where you will place Mconf-Web. If Mconf-Web is at `/home/mconf/mconf-web/current` you don't need to do anything!

Otherwise, edit the file with your favorite editor or use the following command to edit it (replace `%PATH%` with the actual path):

{{{
sudo sed -i "s:^RAILS_ROOT =.*:RAILS_ROOT = \"%PATH%\":g" /etc/god/conf.d/delayed_job.god

# example:
sudo sed -i "s:^RAILS_ROOT =.*:RAILS_ROOT = \"/home/mconf/mconf-web/current\":g" /etc/god/conf.d/delayed_job.god
}}}


Read the next section to see how to start God.


= Managing God: start, stop, status =

To start and stop God, we'll install an init script in `/etc/init.d/`:

{{{
sudo curl https://raw.github.com/mconf/mconf-web/latest/config/god/init_script -o /etc/init.d/god
sudo chmod a+x /etc/init.d/god
sudo update-rc.d god defaults
}}}

This script is already configured to load the configuration file `/etc/god/config` and save the log at `/var/log/god.log`. The pid file will be at `GOD_PID=/var/run/god.pid`.

Then you can start/stop god with:

{{{
sudo /etc/init.d/god {start|stop|terminate|restart|status}
}}}

Start it, check if it's running. If not, check the messages in the log file:

{{{
sudo /etc/init.d/god start
ps aux | grep god
}}}

The "ps" command above should show a process similar to:

{{{
root     28309  9.5  4.2  35808 21380 pts/0    Sl   15:02   0:01 /usr/local/rvm/gems/ruby-1.9.2-p290@mconf/bin/god
}}}

It's also important to mention that God has two stop commands: "stop" and "terminate". Using "stop" will finish only God's process, but all monitored processes will not be finished, they will just become unmonitored. The command "terminate" however will stop God and all the monitored processes. "terminate" is usually more useful since it will force processes like delayed_job to be finished and then restarted when God is restarted, and this is usually what the user expects when he stops God.




= Updating God to another version =

First stop it and uninstall the old version:

{{{
sudo /etc/init.d/god terminate
gem uninstall god
}}}

Then run the commands listed in the top of this section to install the new version of god and to create the rvm wrapper.

Make sure the new God is installed, checking the version with:

{{{
bootup_god -v
}}}

Start it again

{{{
sudo /etc/init.d/god start
}}}