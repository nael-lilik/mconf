#summary How to install Passenger in a Mconf-Web production server

_This page is part of the Mconf-Web deployment described in [MconfWebDeploymentManual this page]._

= Installing Passenger for Mconf-Web =

<wiki:toc max_depth="3" />




== Passenger with Apache ==

Install Passenger (it's a ruby gem) and it's module for Apache. Passenger has a nice installer that will compile the Apache module and install it for you. If some dependency is missing it will warn you and help you install it. Run the following commands:

{{{
gem install passenger -v 3.0.11            # this version is also defined in the Gemfile
passenger-install-apache2-module
}}}

(In case `passenger-install-apache2-module` is not found, look for it at `/usr/local/rvm/gems/ruby-1.9.2-p290@mconf/bin/` and use its full path in the command above.)

The application `passenger-install-apache2-module` is interactive and has the following steps:

  # Check for dependencies: If your system is missing any required software, it will warn you and tell you how to install them. You have to install *all packages suggested!* Simply exit the passenger installer, install the packages and then run the passenger installer again;
  # Automatically compile and install the module for Apache;
  # It will show you some lines that must be added the you Apache configuration file. Ignore this for now, the next step of this guide will show you how to configure it.
  # In the last step it will give you an example of how to deploy an application. Ignore the example for now, the next step of this guide will show you the specific configurations for Mconf-web.

See more about Passenger at [http://www.modrails.com/ their website] and [http://www.modrails.com/videos/passenger.mov check this video] to see more about how it can be used with Apache.


=== Apache configurations ===

By default Apache is installed at `/etc/apache2/` and it's configuration file will be at `/etc/apache2/apache2.conf`.
You can add configuration files at `/etc/apache2/conf.d/` and sites at `/etc/apache2/sites-available/`.

At first, enable the Passenger module in Apache with:

{{{
passenger-install-apache2-module --snippet | sudo tee /etc/apache2/conf.d/mconf-passenger
}}}

This will create a new configuration file with the Passenger module snippet, the same block Passenger showed you in the item 3 in the previous section.

Next, we enable the rewrite module in Apache and remove any default site that might exist:

{{{
sudo a2enmod rewrite
sudo rm /etc/apache2/sites-enabled/*
}}}

Now you need to add a configuration file for Mconf-Web. You might just download our example and edit it:

{{{
sudo curl https://raw.github.com/mconf/mconf-web/latest/config/webserver/apache2.example -o /etc/apache2/sites-available/mconf-web
}}}

The file will be saved at `/etc/apache2/sites-available/mconf-web`. This is the content of this file:

{{{
<VirtualHost *:80>

  # Shows the maintenance page if it exists
  ErrorDocument 503 /system/maintenance.html
  RewriteEngine On
  RewriteCond %{REQUEST_URI} !\.(css|gif|jpg|png)$
  RewriteCond %{DOCUMENT_ROOT}/system/maintenance.html -f
  RewriteCond %{SCRIPT_FILENAME} !maintenance.html
  RewriteRule ^.*$  -  [redirect=503,last]

  ServerName YOUR_HOST
  DocumentRoot /YOUR_MCONF_WEB/public
  <Directory /YOUR_MCONF_WEB/public>
    AllowOverride all
    Options -MultiViews
  </Directory>
</VirtualHost>
}}}

You should change "`YOUR_HOST`" by your IP or domain and "`/YOUR_MCONF_WEB/public`" (both occurrences) to the path to your Mconf-Web application, that should be "`/home/mconf/mconf-web/current/public`" (don't forget to point to the *public* directory!).

After editing the file, enable it in Apache with:

{{{
sudo a2ensite mconf-web
}}}

At last, restart Apache and it should be ready to serve Mconf-Web:

{{{
sudo service apache2 restart
}}}


== Passenger with Nginx ==

<font color=red>Note: Mconf-Web with Nginx is not being tested/maintained anymore.</font>

The instructions are still available [MconfWebDeploymentInstallPassengerNginx in this page] to help whoever needs to use Mconf-Web with Nginx, but the instructions might be outdated.



== Updating Passenger ==

Stop Apache and uninstall the old Passenger gem:

{{{
sudo service apache2 stop
gem uninstall passenger
}}}

Install the new version of Passenger as described previously and install the Apache module again:

{{{
passenger-install-apache2-module
}}}

Check Passenger's version with:

{{{
gem list
}}}

Check the configuration files (for Apache you'll have to update the snippet) and restart the web server.